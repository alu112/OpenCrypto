#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
   li.andrew.mail@gmail.com
   gavinux@gmail.com

#include <unistd.h>
#include "random.h"
#include "bn.h"

int  get_random(int nbytes, uint8_t u8[])
{
	int fd, i, c;
	fd = open("/dev/urandom", O_RDONLY);
	if (fd) {
		for (i=0; i<nbytes; i++) {
			read(fd, &c, 1);
			if (c) *u8++ = c;
		}
		close(fd);
		return nbytes;
	}
	return -1;
}

uint32_t bn_gen_random(int bitlength, bn_t bn)
{
	int fd, i, n;
	uint8_t *p8;

	p8 = (uint8_t *)bn;
	bn_clear(bn);
	fd = open("/dev/urandom", O_RDONLY);
	if (fd) {
		/* make sure LSbit is 1 */
		do {
			read(fd, p8, 1);
		} while ((*p8 & 1) == 0);
		p8++;

		for (i=1; i<bitlength/8; i++, p8++) 
			read(fd, p8, 1);

		n = bitlength % 8;
		if (!n) { p8--; n = 8;}

		/* make sure MSbit is 1 */
		do {
			read(fd, p8, 1);
			*p8 &= ((1<<n) - 1);
		} while ((*p8 & (1<<(n-1))) == 0);

		close(fd);
		return bitlength;
	}
	else return -1;
}

